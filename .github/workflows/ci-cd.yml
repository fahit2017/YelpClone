name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: yelpclone
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn -B package --file pom.xml
      env:
        SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/yelpclone
        SPRING_DATASOURCE_USERNAME: postgres
        SPRING_DATASOURCE_PASSWORD: postgres
        JWT_SECRET: ${{ secrets.JWT_SECRET }}

    - name: Run tests
      run: mvn test
      env:
        SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/yelpclone
        SPRING_DATASOURCE_USERNAME: postgres
        SPRING_DATASOURCE_PASSWORD: postgres
        JWT_SECRET: ${{ secrets.JWT_SECRET }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build
        path: target/*.jar

  deploy:
    needs: build-and-test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build
        path: target/

    # Add deployment steps here based on your hosting platform
    # For example, for AWS Elastic Beanstalk:
    # - name: Deploy to AWS Elastic Beanstalk
    #   uses: einaregilsson/beanstalk-deploy@v21
    #   with:
    #     aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     application_name: yelpclone
    #     environment_name: yelpclone-prod
    #     region: us-east-1
    #     version_label: ${{ github.sha }}
    #     deployment_package: target/YelpClone-0.0.1-SNAPSHOT.jar 